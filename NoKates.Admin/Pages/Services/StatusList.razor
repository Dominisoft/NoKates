@page "/Services/StatusList"
@using NoKates.Common.Infrastructure.Client
@using NoKates.Common.Infrastructure.Helpers
@using Blazored.LocalStorage
@inject INoKatesCoreClient Client;
@inject ILocalStorageService storage;
@code {

    public List<string> Services { get; set; }
    private string token;
    protected override async Task OnInitializedAsync()
    {
        
        token = await storage.GetItemAsStringAsync("AuthorizationToken");
        HttpHelper.SetToken(token);
        var response = Client.GetAllServiceNames(token);
        
        Services = response.Object.Distinct().Where(x => !string.IsNullOrWhiteSpace(x)).ToList();
    }
}


<div class="text-center" style="display:inline;">
    <h4>Services</h4>
    <div name="ColorKey" style="display:flex;background-color:black;">
        <h6 style="color:@StatusColor.Good; padding:5px;">Good</h6>
        <h6 style="color:@StatusColor.Degraded; padding:5px;">Slow Response</h6>
        <h6 style="color:@StatusColor.Issue; padding:5px;">High Errors</h6>
        <h6 style="color:@StatusColor.Offline; padding:5px;">Offline</h6>
        <h6 style="color:@StatusColor.NoTraffic; padding:5px;">NoTraffic</h6>
    </div>
    <div style="display: inline;">
        @foreach (var service in Services??new List<string>())
        {
            <ServiceStatusCard Name="@service" authToken="@token" />
        }
    </div>

    <a href="./Services/AppManagement"> Add or Remove</a>
</div>

